/*
 *
 * Breakpoints
 *
*/

$breakpoints: (
  sm: 34em,
  md: 48em,
  lg: 62em,
  xl: 75em,
);

@mixin breakpoint($from: false, $until: false, $and: false, $media-type: all) {
  $min-width: 0;
  $max-width: 0;
  $bk-final-query-str: "";

  @if $from {
    $min-width: map-get($breakpoints, $from);
  }

  @if $until {
    $max-width: map-get($breakpoints, $until) - 1em;
  }

  @if $min-width != 0 {
    $bk-final-query-str: "#{$bk-final-query-str} and (min-width: #{$min-width})";
  }
  
  @if $max-width != 0 {
    $bk-final-query-str: "#{$bk-final-query-str} and (max-width: #{$max-width})";
  }

  @if $and {
    $bk-final-query-str: "#{$bk-final-query-str} and (#{$and})";
  }

  @if ($media-type == "all" and $bk-final-query-str != "") {
    $media-type: "";
    $bk-final-query-str: str-slice(unquote($bk-final-query-str), 6);
  }

  @media #{$media-type + $bk-final-query-str} {
    @content;
  }
}

/*
 *
 * Box Sizing
 *
*/

@mixin box-sizing($box-model) {
  box-sizing: $box-model;
}

/*
 *
 * Center Block
 *
*/

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/*
 *
 * Text overflow
 *
*/

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/*
 *
 * Font Size
 *
*/

@mixin font-size($size: 12, $base: 16) {
  font-size: $size + px;
  font-size: ($size / $base) * 1rem;
}

/*
 *
 * Transition
 *
*/

@mixin transition($values...) {
  $transitions: ();

  @each $declaration in $values {
    $prop: nth($declaration, 1);
    $prop-opts: ();
    $length: length($declaration);

    @for $i from 2 through $length {
      $prop-opts: append($prop-opts, nth($declaration, $i));
    }

    $trans: ($prop, $prop-opts);
    $transitions: append($transitions, $trans, comma);
  }
  transition: $values;
}
